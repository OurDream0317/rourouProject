<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="rg.sqsf.project.mapper.OrderMapper" >
  <resultMap id="BaseResultMap" type="rg.sqsf.project.model.Order" >
    <id column="orderId" property="orderid" jdbcType="INTEGER" />
    <result column="orderType" property="ordertype" jdbcType="INTEGER" />
    <result column="orderTime" property="ordertime" jdbcType="VARCHAR" />
    <result column="orderNumber" property="ordernumber" jdbcType="VARCHAR" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="carId" property="carid" jdbcType="INTEGER" />
    <result column="orderState" property="orderstate" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    orderId, orderType, orderTime, orderNumber, userId, carId, orderState
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order
    where orderId = #{orderid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order
    where orderId = #{orderid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="rg.sqsf.project.model.Order" >
    insert into order (orderId, orderType, orderTime, 
      orderNumber, userId, carId, 
      orderState)
    values (#{orderid,jdbcType=INTEGER}, #{ordertype,jdbcType=INTEGER}, #{ordertime,jdbcType=VARCHAR}, 
      #{ordernumber,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER}, #{carid,jdbcType=INTEGER}, 
      #{orderstate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="rg.sqsf.project.model.Order" >
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        orderId,
      </if>
      <if test="ordertype != null" >
        orderType,
      </if>
      <if test="ordertime != null" >
        orderTime,
      </if>
      <if test="ordernumber != null" >
        orderNumber,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="carid != null" >
        carId,
      </if>
      <if test="orderstate != null" >
        orderState,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="ordertype != null" >
        #{ordertype,jdbcType=INTEGER},
      </if>
      <if test="ordertime != null" >
        #{ordertime,jdbcType=VARCHAR},
      </if>
      <if test="ordernumber != null" >
        #{ordernumber,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="carid != null" >
        #{carid,jdbcType=INTEGER},
      </if>
      <if test="orderstate != null" >
        #{orderstate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="rg.sqsf.project.model.Order" >
    update order
    <set >
      <if test="ordertype != null" >
        orderType = #{ordertype,jdbcType=INTEGER},
      </if>
      <if test="ordertime != null" >
        orderTime = #{ordertime,jdbcType=VARCHAR},
      </if>
      <if test="ordernumber != null" >
        orderNumber = #{ordernumber,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="carid != null" >
        carId = #{carid,jdbcType=INTEGER},
      </if>
      <if test="orderstate != null" >
        orderState = #{orderstate,jdbcType=INTEGER},
      </if>
    </set>
    where orderId = #{orderid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="rg.sqsf.project.model.Order" >
    update order
    set orderType = #{ordertype,jdbcType=INTEGER},
      orderTime = #{ordertime,jdbcType=VARCHAR},
      orderNumber = #{ordernumber,jdbcType=VARCHAR},
      userId = #{userid,jdbcType=INTEGER},
      carId = #{carid,jdbcType=INTEGER},
      orderState = #{orderstate,jdbcType=INTEGER}
    where orderId = #{orderid,jdbcType=INTEGER}
  </update>
</mapper>