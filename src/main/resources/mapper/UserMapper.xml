<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="rg.sqsf.project.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="rg.sqsf.project.model.User" >
    <id column="userId" property="userid" jdbcType="INTEGER" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="userPWD" property="userpwd" jdbcType="VARCHAR" />
    <result column="userPhone" property="userphone" jdbcType="VARCHAR" />
    <result column="userEmail" property="useremail" jdbcType="VARCHAR" />
    <result column="userIcon" property="usericon" jdbcType="VARCHAR" />
    <result column="adress" property="adress" jdbcType="VARCHAR" />
    <result column="userState" property="userstate" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    userId, userName, userPWD, userPhone, userEmail, userIcon, adress, userState
  </sql>
  <select id="findUsers" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where userId = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="rg.sqsf.project.model.User" >
    insert into user (userId, userName, userPWD, 
      userPhone, userEmail, userIcon, 
      adress, userState)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{userpwd,jdbcType=VARCHAR}, 
      #{userphone,jdbcType=VARCHAR}, #{useremail,jdbcType=VARCHAR}, #{usericon,jdbcType=VARCHAR}, 
      #{adress,jdbcType=VARCHAR}, #{userstate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="rg.sqsf.project.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="userpwd != null" >
        userPWD,
      </if>
      <if test="userphone != null" >
        userPhone,
      </if>
      <if test="useremail != null" >
        userEmail,
      </if>
      <if test="usericon != null" >
        userIcon,
      </if>
      <if test="adress != null" >
        adress,
      </if>
      <if test="userstate != null" >
        userState,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="userpwd != null" >
        #{userpwd,jdbcType=VARCHAR},
      </if>
      <if test="userphone != null" >
        #{userphone,jdbcType=VARCHAR},
      </if>
      <if test="useremail != null" >
        #{useremail,jdbcType=VARCHAR},
      </if>
      <if test="usericon != null" >
        #{usericon,jdbcType=VARCHAR},
      </if>
      <if test="adress != null" >
        #{adress,jdbcType=VARCHAR},
      </if>
      <if test="userstate != null" >
        #{userstate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="rg.sqsf.project.model.User" >
    update user
    <set >
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="userpwd != null" >
        userPWD = #{userpwd,jdbcType=VARCHAR},
      </if>
      <if test="userphone != null" >
        userPhone = #{userphone,jdbcType=VARCHAR},
      </if>
      <if test="useremail != null" >
        userEmail = #{useremail,jdbcType=VARCHAR},
      </if>
      <if test="usericon != null" >
        userIcon = #{usericon,jdbcType=VARCHAR},
      </if>
      <if test="adress != null" >
        adress = #{adress,jdbcType=VARCHAR},
      </if>
      <if test="userstate != null" >
        userState = #{userstate,jdbcType=INTEGER},
      </if>
    </set>
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="rg.sqsf.project.model.User" >
    update user
    set userName = #{username,jdbcType=VARCHAR},
      userPWD = #{userpwd,jdbcType=VARCHAR},
      userPhone = #{userphone,jdbcType=VARCHAR},
      userEmail = #{useremail,jdbcType=VARCHAR},
      userIcon = #{usericon,jdbcType=VARCHAR},
      adress = #{adress,jdbcType=VARCHAR},
      userState = #{userstate,jdbcType=INTEGER}
    where userId = #{userid,jdbcType=INTEGER}
  </update>
</mapper>